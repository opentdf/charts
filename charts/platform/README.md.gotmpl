{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.badgesSection" . }}

{{ template "chart.description" . }}

> [!WARNING]
> This chart is currently under active development and breaking changes may occur.

## Requirements

In order to run the platform you need a supported identity provider and postgres database. 

## Pre-Requisites

### KAS Secret

In order to run the KAS server, you need to provide the KAS with a set a keys. This will allow the KAS to support nanotdf and tdf3 rewrap functionality.

#### Generate a set of KAS keys

```bash
openssl req -x509 -nodes -newkey RSA:2048 -subj "/CN=kas" -keyout kas-private.pem -out kas-cert.pem -days 365
openssl req -x509 -nodes -newkey ec:<(openssl ecparam -name secp256r1) -subj "/CN=kas" -keyout kas-ec-private.pem -out kas-ec-cert.pem -days 365
```

To create a secret with the keys, run the following command:

```bash
kubectl create secret generic kas-private-keys --from-file=./kas-cert.pem --from-file=./kas-ec-cert.pem --from-file=./kas-ec-private.pem --from-file=kas-private.pem
```

### HTTP/2 Support

The platform provides both gRPC and RESTful interfaces. Since gRPC requires HTTP/2 support, it's essential to configure your ingress with the appropriate annotations to handle this requirement.

Below are starting examples for configuring various ingress providers:

#### Openshift

Example values.yaml for edge terminated route:
```yaml
ingress:
  enabled: true
  annotations:
    route.openshift.io/termination: "edge"
  hosts:
    - host: platform.apps.okd.example.com
      paths:
        - backend:
            name: platform
            port:
              number: 9000
          path: ""
          pathType: ImplementationSpecific
```

## Post Install

If everything is healthy you should be able to access the platform at the hostname you provided in the `ingress.hostname` field.

```sh
export PLATFORM_HOST=$(kubectl get ingress -l app.kubernetes.io/name=platform -o jsonpath='{.items[0].spec.rules[0].host}'  )  
grpcurl -insecure $PLATFORM_HOST:443 kas.AccessService/PublicKey
```

### Post Install with Playground enabled

Download the [keycloak_data.yaml](https://raw.githubusercontent.com/opentdf/platform/main/service/cmd/keycloak_data.yaml)

 Run the following command to provision keycloak test data

  ```sh
    docker run \
         -v ./kc-config.yaml:/home/nonroot/.opentdf/kc-config.yaml \
         -it registry.opentdf.io/platform:nightly provision keycloak -f /home/nonroot/.opentdf/kc-config.yaml -e https://kc-nightly.apps.dsp.shp.virtru.us -u admin -p keycloak123
  ```
{{ template "chart.homepageLine" . }}

{{ template "chart.maintainersSection" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}
