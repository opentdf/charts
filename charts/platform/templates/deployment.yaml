apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          args:
            - start
            - --config-file
            - /etc/platform/config/{{ include "platform.configFileName" .}}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http2
              containerPort: {{ .Values.server.port }}
              protocol: TCP
          {{ if not .Values.server.disableHealthChecks }}
          livenessProbe:
            httpGet:
              scheme: {{ if .Values.server.tls.enabled }}HTTPS{{ else }}HTTP{{ end }}              
              path: /healthz
              port: http2
          readinessProbe:
            httpGet:
              scheme: {{ if .Values.server.tls.enabled }}HTTPS{{ else }}HTTP{{ end }}
              path: /healthz?service=all
              port: http2
          {{ end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              readOnly: true
              mountPath: /etc/platform/config
            - name: kas-private-keys
              readOnly: true
              mountPath: /etc/platform/kas
            - name: trusted-certs
              readOnly: true
              mountPath: /etc/ssl/certs
            {{- if .Values.server.tls.enabled }}
            - name: tls
              readOnly: true
              mountPath: /etc/platform/certs
            {{- end -}}
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
          - name: {{include "platform.envVarPrefix" .}}_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.db.password.secret.name }}
                key: {{ .Values.db.password.secret.key  }}
            {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 10 }}
            {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 10 }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "chart.fullname" . }}
        - name: kas-private-keys
          secret:
            secretName: {{ .Values.services.kas.privateKeysSecret }}
        {{- if .Values.server.tls.enabled }}
        - name: tls
          secret:
            secretName: {{ .Values.server.tls.secret | default (printf "%s-tls" (include "chart.fullname" .)) }}
        {{- end }}
        - name: trusted-certs
          projected:
            defaultMode: 0400
            sources:
            {{- if and .Values.playground .Values.keycloak.ingress.tls }}
            - secret:
                name: {{ .Values.keycloak.ingress.hostname }}-tls # If the fullnameOverride is set, this will break
                optional: false
                items:
                  - key: ca.crt
                    path: kc-ca.crt
            {{- end -}}
            {{- with .Values.server.tls.additionalTrustedCerts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
