{{ $data := dict "Release" $.Release "Chart" $.Chart "Values" $.Values "Files" $.Files "Capabilities" .Capabilities }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.hostAliases }}
      hostAliases:
        {{- toYaml .Values.hostAliases | nindent 8 }}
      {{- end -}}
      {{- if .Values.initContainers }}
      initContainers:
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{  include "platform.util.merge.list" (list $data "volumes" .Values.volumeTemplate "platform.volumes.tpl" ) | nindent 6 }}
      containers:
        - name: {{ .Chart.Name }}
          args:
            - start
            - --config-file
            - /etc/platform/config/{{ include "platform.configFileName" .}}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: {{ include "platform.portName" . }}
              containerPort: {{ .Values.server.port }}
              protocol: TCP
          {{ if not .Values.server.disableHealthChecks }}
          livenessProbe:
            httpGet:
              scheme: {{ if .Values.server.tls.enabled }}HTTPS{{ else }}HTTP{{ end }}              
              path: /healthz
              port: {{ include "platform.portName" . }}
          readinessProbe:
            httpGet:
              scheme: {{ if .Values.server.tls.enabled }}HTTPS{{ else }}HTTP{{ end }}
              path: /healthz?service=all
              port: {{ include "platform.portName" . }}
          {{ end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{  include "platform.util.merge.list" (list $data "volumeMounts" .Values.volumeMountTemplate "platform.volumeMounts.tpl" ) | nindent 10}}
          env:
          - name: SSL_CERT_DIR
            value: '/etc/ssl/certs:/etc/ssl/certs/platform'
          {{- if .Values.db.required}}
          - name: {{include "platform.envVarPrefix" .}}_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.db.password.secret.name }}
                key: {{ .Values.db.password.secret.key  }}
          {{- end }}
          {{- if and .Values.sdk_config.existingSecret.name .Values.sdk_config.existingSecret.key }}
          - name: {{include "platform.envVarPrefix" .}}_SDK_CONFIG_CLIENTSECRET
            valueFrom:
              secretKeyRef:
                name: {{ .Values.sdk_config.existingSecret.name }}
                key: {{ .Values.sdk_config.existingSecret.key }}
          {{- end }}
          {{- if and (or (contains "all" .Values.mode) (contains "kas" .Values.mode)) .Values.services.kas.config.preview.key_management }}
          - name: {{include "platform.envVarPrefix" .}}_KAS_ROOT_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.services.kas.root_key_secret.name }}
                key: {{ .Values.services.kas.root_key_secret.key }}
          {{- end }}
            {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 10 }}
            {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 10 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
